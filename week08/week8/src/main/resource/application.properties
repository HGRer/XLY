#shardingsphere
spring.shardingsphere.props.sql-show=true
spring.shardingsphere.mode.type=Memory

spring.shardingsphere.datasource.names=ds0, ds1
#db0
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://localhost:3306/biz?setUnicode=true&characterEncoding=utf8
spring.shardingsphere.datasource.ds0.username=root
#ds1
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3307/biz?setUnicode=true&characterEncoding=utf8
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123456

#db.user分库配置
spring.shardingsphere.rules.sharding.tables.user.actual-data-nodes=ds$->{0..1}.USER
spring.shardingsphere.rules.sharding.tables.user.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.user.database-strategy.standard.sharding-algorithm-name=db-user
spring.shardingsphere.rules.sharding.sharding-algorithms.db-user.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.db-user.props.algorithm-expression=ds$->{user_id % 2}

#db.3306.meta_data_cd
spring.shardingsphere.rules.sharding.tables.meta_data_cd.actual-data-nodes=ds0.meta_data_cd

#db.product分库配置
spring.shardingsphere.rules.sharding.tables.product.actual-data-nodes=ds$->{0..1}.product
spring.shardingsphere.rules.sharding.tables.product.database-strategy.standard.sharding-column=product_id
spring.shardingsphere.rules.sharding.tables.product.database-strategy.standard.sharding-algorithm-name=db-product
spring.shardingsphere.rules.sharding.sharding-algorithms.db-product.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.db-product.props.algorithm-expression=ds$->{product_id % 2}
#db.productPriceHist分库配置
spring.shardingsphere.rules.sharding.tables.productpricehistory.actual-data-nodes=ds$->{0..1}.product_price_hist
spring.shardingsphere.rules.sharding.tables.productpricehistory.database-strategy.standard.sharding-column=product_id
spring.shardingsphere.rules.sharding.tables.productpricehistory.database-strategy.standard.sharding-algorithm-name=db-product

#db.order_request分库配置
spring.shardingsphere.rules.sharding.tables.order_request.actual-data-nodes=ds0.order_request_$->{[0, 2, 4, 6, 8]}, ds1.order_request_$->{[1, 3, 5, 7, 9]}
spring.shardingsphere.rules.sharding.tables.order_request.database-strategy.standard.sharding-column=order_request_id
spring.shardingsphere.rules.sharding.tables.order_request.database-strategy.standard.sharding-algorithm-name=db-orderrequest
spring.shardingsphere.rules.sharding.sharding-algorithms.db-orderrequest.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.db-orderrequest.props.algorithm-expression=ds$->{order_request_id % 2}
#db.order_request分表配置
spring.shardingsphere.rules.sharding.tables.order_request.table-strategy.standard.sharding-column=order_request_id
spring.shardingsphere.rules.sharding.tables.order_request.table-strategy.standard.sharding-algorithm-name=table-orderrequest
spring.shardingsphere.rules.sharding.sharding-algorithms.table-orderrequest.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-orderrequest.props.algorithm-expression=order_request_$->{order_request_id.get(order_request_id.size() - 1)}
#db.order_request_item分库配置
spring.shardingsphere.rules.sharding.tables.order_request_item.actual-data-nodes=ds0.order_request_item_$->{[0, 2, 4, 6, 8]}, ds1.order_request_item_$->{[1, 3, 5, 7, 9]}
spring.shardingsphere.rules.sharding.tables.order_request_item.database-strategy.standard.sharding-column=order_request_id
spring.shardingsphere.rules.sharding.tables.order_request_item.database-strategy.standard.sharding-algorithm-name=db-orderrequest
#db.order_request_item分表配置
spring.shardingsphere.rules.sharding.tables.order_request_item.table-strategy.standard.sharding-column=order_request_id
spring.shardingsphere.rules.sharding.tables.order_request_item.table-strategy.standard.sharding-algorithm-name=table-orderrequest
#db.order_request_hist分库配置
spring.shardingsphere.rules.sharding.tables.order_request_hist.actual-data-nodes=ds0.order_request_hist_$->{[0, 2, 4, 6, 8]}, ds1.order_request_hist_$->{[1, 3, 5, 7, 9]}
spring.shardingsphere.rules.sharding.tables.order_request_hist.database-strategy.standard.sharding-column=order_request_id
spring.shardingsphere.rules.sharding.tables.order_request_hist.database-strategy.standard.sharding-algorithm-name=db-orderrequest
#db.order_request_hist分表配置
spring.shardingsphere.rules.sharding.tables.order_request_hist.table-strategy.standard.sharding-column=order_request_id
spring.shardingsphere.rules.sharding.tables.order_request_hist.table-strategy.standard.sharding-algorithm-name=table-orderrequest